channel int SysErr <-0;
channel int X <- -1; 
channel int Y <- -1; 
channel int Z <- -1;
channel int EPO <- 10;
channel int EMAX <- 20;
channel bool Predicted <- false;

on entry(string ru) from stdin do
    out string outRu;
    outRu <- ru;
    send entry(outRu) to stdout;
end

on mk_prediction(string ru, int x, int y, int z) from stdin do
    out string outRu;
    X <- x;
    Y <- y;
    Z <- z;
    Predicted <- true;
    outRu <- ru;
    send predicted(outRu) to stdout;
end

on obstacle(string ru, int x, int y, int z) from stdin do
    out bool error, int LErr, string outRu;
    LErr <- ite(#Predicted, |x - X| + |y - Y| + |z - Z|, 0);
    SysErr <- SysErr + LErr;
    Predicted <- false;
    error <- (LErr > EPO) or (SysErr > EMAX);
    outRu <- ru;
    send valid(outRu, error) to stdout;
end

on exit(string ru, int lerr) from stdin do
    out string outRu;
    outRu <- ru;
    SysErr <- SysErr - lerr;
    send exit(ru) to stdout;
end